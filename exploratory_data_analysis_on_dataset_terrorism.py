# -*- coding: utf-8 -*-
"""Exploratory Data Analysis on Dataset - Terrorism

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UacO09TRrbMtyKmLGrpm9c1BxQ0SPRZ7
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings("ignore")

"""IMPORT THE DATASET"""

terrorism_df=pd.read_csv('/content/globalterrorismdb_0718dist.csv',encoding = "ISO-8859-1")

terrorism_df

print("There are {} rows and {} columns in the dataset".format(terrorism_df.shape[0],terrorism_df.shape[1]))

"""View all columns in dataframe"""

terrorism_df.columns

"""Total number of unique columns in the dataset"""

No_of_cols=terrorism_df.columns.nunique()
print("There are total %d columns in the data"%No_of_cols)

"""Rename required columns"""

terrorism_df=terrorism_df.rename(columns={'iyear':'Year','imonth':'Month','iday':'Day','country_txt':'Country','region_txt':'Region',
                             'provstate':'State','city':'City','attacktype1_txt':'Attack_type','targtype1_txt':'Target_type',
                             'targsubtype1_txt':'Target_subtype','gname':'Gang_name','weaptype1_txt':'Weapon_type'})

terrorism_df

"""Take only the columns required for analysis"""

terrorism_df=terrorism_df[['Year','Month','Day','Country','Region','State','City','Attack_type','Target_type','Target_subtype','Gang_name','Weapon_type']]

terrorism_df

"""Filling NaN values in Target_subtype, State, City"""

terrorism_df['Target_subtype'] = terrorism_df['Target_subtype'].fillna('others')

terrorism_df['State']=terrorism_df['State'].fillna('Unknown')

terrorism_df['City']=terrorism_df['City'].fillna('Unknown')

"""Replace with vehicle"""

terrorism_df.replace( {"Vehicle (not to include vehicle-borne explosives, i.e., car or truck bombs)": "Vehicle"},inplace = True)

terrorism_df

terrorism_df.shape

"""12 columns and 88022 rows are present

**Check for null values**
"""

terrorism_df.isnull().sum()

terrorism_df.head(10)

terrorism_df.columns.unique()

terrorism_df.columns.nunique()

Total_countries=terrorism_df['Country'].nunique()
print("Total %d countries were noted in the data"%Total_countries)

print(terrorism_df['Region'].unique())

print(terrorism_df['Region'].nunique())

print(terrorism_df['Attack_type'].unique())

print(terrorism_df['Target_type'].unique())

print(terrorism_df['Gang_name'].unique())

print(terrorism_df['Gang_name'].nunique())

print(terrorism_df['Weapon_type'].unique())

terrorism_df.info()

terrorism_df.describe()

terrorism_df['Country'].value_counts().head(10)

"""Top 10 affected region"""

terrorism_df['Region'].value_counts().head(10)

"""Top 10 affected states"""

terrorism_df['State'].value_counts().head(10)

terrorism_df['Target_subtype'].value_counts().head(10)

"""Top 10 affected cities"""

terrorism_df['City'].value_counts().head(10)

"""Choosen attacking modes"""

terrorism_df['Attack_type'].value_counts().head(10)

""" Top 10 targets to attack"""

terrorism_df['Target_type'].value_counts().head(10)

""" the most chosen weapons for attacks."""

terrorism_df['Weapon_type'].value_counts().head(5)

"""most dangerous and leading top 10 gangs."""

terrorism_df['Gang_name'].value_counts().head(10)

"""**Visualizations**"""

plt.figure(figsize=(25,8));
sns.countplot(x=terrorism_df.Weapon_type);

plt.figure(figsize=(25,8));
plt.xticks(rotation = 90)
plt.title('Attacks by Year')
sns.countplot(x=terrorism_df.Year);

plt.figure(figsize=(25,8));
plt.title('Attacks by Month')
sns.countplot(x=terrorism_df.Month);

plt.figure(figsize=(25,8));
plt.title('Attacks by Day')
sns.countplot(x=terrorism_df.Day);

plt.figure(figsize=(28,10));
plt.rcParams.update({'font.size':8});
plt.xticks(rotation = 90)
plt.title('Attacks by Country')
sns.countplot(x=terrorism_df.Country);

plt.figure(figsize=(28,5));
plt.rcParams.update({'font.size':10});
plt.xticks(rotation = 0)
plt.title('Attacks by Region')
sns.countplot(x=terrorism_df.Region);

plt.figure(figsize=(20,5));
plt.rcParams.update({'font.size':10});
plt.xticks(rotation = 90)
plt.title('Based on Target type')
sns.countplot(x=terrorism_df.Target_type);

plt.figure(figsize=(20,5));
plt.rcParams.update({'font.size':12});
plt.xticks(rotation = 0)
plt.title('Based on Attack type')
sns.countplot(x=terrorism_df.Attack_type);